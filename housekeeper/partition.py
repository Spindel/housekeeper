#!/usr/bin/env python3
from .housekeeper import create_table_partition, ensure_btree_index
from .times import months_for_year_ahead


def gen_partitions(table="history_part"):
    for date in months_for_year_ahead():
        yield from create_table_partition(
            table=table, year=date.year, month=date.month
        )

        yield from ensure_btree_index(
            table=table, year=date.year, month=date.month, concurrently=False
        )


def gen_partition_database():
    tables = ("history", "history_str", "history_text", "history_uint")
    yield "-- PARTITION A PRISTINE ZABBIX DATABASE"
    yield "-- WARNING: Discards all historical data"
    yield "-- generated by https://gitlab.com/ModioAB/housekeeper"
    yield "--"
    yield "BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;"
    for table in tables:
        to_table = f"{table}_part"
        yield f"CREATE TABLE {to_table} (LIKE {table}) PARTITION BY range(clock);"
        yield f"DROP TABLE {table};"
        yield f"ALTER TABLE {to_table} RENAME TO {table};"
        yield from gen_partitions(table=table)
    yield "END TRANSACTION;"


def main():
    for line in gen_partition_database():
        print(line)


if __name__ == "__main__":
    main()
